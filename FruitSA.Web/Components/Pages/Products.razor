@page "/products/{Token}"
@using Microsoft.AspNetCore.Authorization
@using System.IdentityModel.Tokens.Jwt
@inherits ProductsBase
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime


<PageTitle>Fruit SA - Products</PageTitle>
<style>
    td{vertical-align:middle;}
</style>
<h3>Products</h3>
@if (!string.IsNullOrEmpty(Token))
{
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <p style="color: red;" class="card-text">@ErrorMessage
        </p>
    }
    <p style="text-align:center;">
        <a href="@($"/add-product/{@Token}")" class="btn btn-view btn-success"><i class="fas fa-plus-square"></i> ADD</a>
        <a href="@($"/upload-products/{@Token}")" class="btn btn-view btn-success"><i class="fas fa-upload"></i> UPLOAD</a>
        <button onclick="@HandleDownloadProducts" class="btn btn-view btn-success"><i class="fas fa-download"></i> DOWNLOAD</button>
    </p>

    @if (Products == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {

        <table class="table table-success table-striped">

            <thead>
                <tr>
                    <th></th>
                    <th>Code:</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Category</th>
                    <th>Price (R)</th>
                    <th>Date Created</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Products)
                {

                    <tr>
                        <td>                      
                            <a href="@($"edit-product/{@product.ProductId}/{@Token}")"><img src="@($"~/images/{product.Image}")" width="80px" height="80px" /></a>
                        </td>
                        <td>@product.ProductCode</td>
                        <td>@product.Name</td>
                        <td>@product.Description</td>
                        <td>@product.Category.Name</td>
                        <td>@product.Price</td>
                        <td>@product.CreatedDate.ToShortDateString()</td>
                        <td>
                            <a href="@($"/view-product/{@product.ProductId}/{@Token}")" class="btn btn-view btn-info"><i class="fas fa-info-circle"></i> View</a>
                          
                        </td>
                    </tr>
                }

                <tr>
                    <td colspan="8" style="text-align:center;">
                        <a href="@($"/add-product/{@Token}")" class="btn btn-view btn-success"><i class="fas fa-plus-square"></i> ADD</a>
                        <a href="@($"/upload-products/{@Token}")" class="btn btn-view btn-success"><i class="fas fa-upload"></i> UPLOAD</a>
                        <button onclick="@HandleDownloadProducts" class="btn btn-view btn-success"><i class="fas fa-download"></i> DOWNLOAD</button>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="text-center">
            <button class="btn btn-view btn-outline-success" disabled="@(currentPage == 1)" @onclick="PreviousPage" style="min-width:90px;"><i class="fas fa-angle-double-left"></i> Previous</button>
            <span>Page @currentPage of @totalPages</span>
            <button class="btn btn-view btn-outline-success" disabled="@(currentPage == totalPages)" @onclick="NextPage" style="min-width:90px;">Next <i class="fas fa-angle-double-right"></i></button>
        </div>
    }
    <Confirmation ConfirmationChanged="ConfirmDownload_CLick" @ref="Confirmation" ConfirmationTitle="Download Confirmation" ConfirmationMessage="Are you sure you want to Download all Products?" ActionButton="Download"></Confirmation>
}
else
{
    @inject NavigationManager NavigationManager
    NavigationManager.NavigateTo("/login");
}
@code {
    
    [CascadingParameter]
    public EventCallback<string> notifyLayout { get; set; }
    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Token))
        { 
            notifyLayout.InvokeAsync(Token);
        }

    }
}
