@page "/view-product/{ProductId:int}/{Token}"
@inherits ProductsBase
@rendermode InteractiveServer

<PageTitle>Fruit SA - Products</PageTitle>
@if (ProductModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row justify-content-center m-3">
        <div class="col-md-8">
            <div class="card m-3" style="min-width:18rem; max-width:22rem;">

                <img class="card-img-top imageThumbnail" src="@($"images/{@ProductModel.Image}")" style="margin-top:10px;" />
           
                <div class="card-body">
                    <h5 class="card-title">@ProductModel.Name</h5>
                    <p class="card-text">@ProductModel.Description</p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Category: @CategoryName</li>
                    <li class="list-group-item">Code: @ProductModel.ProductCode</li>
                    <li class="list-group-item">Price (R): @ProductModel.Price</li>
                </ul>
                <div class="card-body text-center">
                    <a href="@($"/edit-product/{@ProductModel.ProductId}/{Token}")" class="btn btn-info"><i class="fas fa-edit"></i> Edit</a>
                    <button type="button" @onclick="HandleProductDelete" class="btn btn-danger"><i class="fas fa-trash-alt"></i> Delete</button>
                </div>
            </div>
        </div>
    
    </div>
    <Confirmation ConfirmationChanged="ConfirmDelete_CLick" @ref = "Confirmation" ConfirmationMessage=@($"Are you sure you want to Delete {@ProductModel.Name}?")></Confirmation>
}
@code {

    [CascadingParameter]
    public EventCallback<string> notifyLayout { get; set; }
    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Token))
        {
            notifyLayout.InvokeAsync(Token);
        }

    }
}